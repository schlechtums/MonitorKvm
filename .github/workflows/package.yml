name: Create Package

on: push

env:
  SOLUTION_PATH: MonitorKvm.Service\MonitorKvm.Service.csproj
  PACKAGE_NAME_PREFIX: MonitorKVM
  PACKAGE_OUTPUT_FOLDER: package

jobs:
  Create-Release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    name: Create Release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ env.PACKAGE_NAME_PREFIX }}_${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

  Build-Win-x64-Package:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    name: Build Win-x64 Package
    needs: Create-Release    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v1

      - name: Nuget Restore
        run: nuget restore ${{ env.SOLUTION_PATH }}
        
      - name: Build Solution
        run: dotnet build ${{ env.SOLUTION_PATH }} -restore:True -nologo -property:Configuration=Release /p:Version=${{ needs.Create-Release.outputs.tag }} -o ${{ env.PACKAGE_OUTPUT_FOLDER }}\win-x64 -r win-x64

      - name: Create Zip
        run: Compress-Archive -Path ${{ env.PACKAGE_OUTPUT_FOLDER }}\win-x64\* -DestinationPath "${{ env.PACKAGE_OUTPUT_FOLDER }}\${{ env.PACKAGE_NAME_PREFIX }}_win-x64_${{ needs.Create-Release.outputs.tag }}.zip"

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Create-Release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.PACKAGE_OUTPUT_FOLDER }}\${{ env.PACKAGE_NAME_PREFIX }}_win-x64_${{ needs.Create-Release.outputs.tag }}.zip
          asset_name: ${{ env.PACKAGE_NAME_PREFIX }}_win-x64_${{ needs.Create-Release.outputs.tag }}.zip
          asset_content_type: application/zip


  Build-Linux-x64-Package:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    name: Build Linux-x64 Package
    needs: Create-Release
    steps:
      - name: Build Solution
        run: dotnet build ${{ env.SOLUTION_PATH }} -restore:True -nologo -property:Configuration=Release /p:Version=${{ needs.Create-Release.outputs.tag }} -o ${{ env.PACKAGE_OUTPUT_FOLDER }}\linux-x64 -r linux-x64

      - name: Create Zip
        run: Compress-Archive -Path ${{ env.PACKAGE_OUTPUT_FOLDER }}\linux-x64\* -DestinationPath "${{ env.PACKAGE_OUTPUT_FOLDER }}\${{ env.PACKAGE_NAME_PREFIX }}_linux-x64_${{ needs.Create-Release.outputs.tag }}.zip"

      - name: Upload Release Asset linux-x64
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Create-Release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.PACKAGE_OUTPUT_FOLDER }}\${{ env.PACKAGE_NAME_PREFIX }}_linux-x64_${{ needs.Create-Release.outputs.tag }}.zip
          asset_name: ${{ env.PACKAGE_NAME_PREFIX }}_win-x64_${{ needs.Create-Release.outputs.tag }}.zip
          asset_content_type: application/zip



  Build-Osx-x64-Package:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    name: Build osx-x64 Package
    needs: Create-Release
    steps:
      - name: Build Solution
        run: dotnet build ${{ env.SOLUTION_PATH }} -restore:True -nologo -property:Configuration=Release /p:Version=${{ needs.Create-Release.outputs.tag }} -o ${{ env.PACKAGE_OUTPUT_FOLDER }}\osx-x64 -r osx-x64

      - name: Create Zip
        run: Compress-Archive -Path ${{ env.PACKAGE_OUTPUT_FOLDER }}\osx-x64\* -DestinationPath "${{ env.PACKAGE_OUTPUT_FOLDER }}\${{ env.PACKAGE_NAME_PREFIX }}_osx-x64_${{ needs.Create-Release.outputs.tag }}.zip"

      - name: Upload Release Asset osx-x64
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Create-Release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.PACKAGE_OUTPUT_FOLDER }}\${{ env.PACKAGE_NAME_PREFIX }}_osx-x64_${{ needs.Create-Release.outputs.tag }}.zip
          asset_name: ${{ env.PACKAGE_NAME_PREFIX }}_win-x64_${{ needs.Create-Release.outputs.tag }}.zip
          asset_content_type: application/zip